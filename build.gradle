plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'ai.wapl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

def queryDslVersion = '1.0.10'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'io.projectreactor:reactor-test'

    // Tibero
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])

    //query dsl
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.jetbrains:annotations:20.1.0'
    // compile "com.querydsl:querydsl-jpa:${queryDslVersion}"
    // annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    //swagger
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
}

test {
	useJUnitPlatform()
}

//querydsl설정

def querydslSrcDir = 'src/main/generated'

querydsl { 
    library = "com.querydsl:querydsl-apt" 
    jpa = true 
    querydslSourcesDir = querydslSrcDir 
}

compileQuerydsl{ 
    // querydsl 컴파일시 사용하는 애노테이션프로세서('com.querydsl.apt.jpa.JPAAnnotationProcessor')의 경로를 querydsl 이 지정한 경로를 이용한다는 선언 
    options.annotationProcessorPath = configurations.querydsl 
} 

configurations { 
    querydsl.extendsFrom compileClasspath 
} 

sourceSets { 
    main { 
        java { 
            srcDirs = ['src/main/java', querydslSrcDir] 
        } 
    } 
} 

tasks.withType(JavaCompile) { 
     options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrcDir) 
}

// project.afterEvaluate {
//     project.tasks.compileQuerydsl.options.compilerArgs = [
//             "-proc:only",
//             "-processor", project.querydsl.processors() +
//                     ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
//     ]
// }
